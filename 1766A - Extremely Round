/*
    A. Extremely Round

    Time limit per test: 3 seconds
    Memory limit per test: 512 megabytes

    Problem Description:
    --------------------
    Let's call a positive integer extremely round if it has only one non-zero digit.
    For example, 5000, 4, 1, 10, 200 are extremely round integers, while 42, 13, 666, 77, 101 are not.

    You are given an integer n.
    You have to calculate the number of extremely round integers x such that 1 ≤ x ≤ n.

    Input:
    ------
    The first line contains one integer t (1 ≤ t ≤ 10^4) — the number of test cases.

    Then, t lines follow. The i-th of them contains one integer n (1 ≤ n ≤ 999999) — 
    the description of the i-th test case.

    Output:
    -------
    For each test case, print one integer — the number of extremely round integers x 
    such that 1 ≤ x ≤ n.
*/


#include<bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin>>t;
    while (t--)
    {
        long long n;
        cin>>n;
        long long i,j,count=0,d;
        for (i = 1; i <= n; i = i * 10)
        {
            for (d = 1; d <= 9; ++d)
            {
                if (d * i <= n)
                {
                    count++;
                }
            }
        }
        
        
        cout<<count<<endl;
    }
}
