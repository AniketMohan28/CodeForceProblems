/* 
A. Mishka and Contest

Time limit per test: 1 second
Memory limit per test: 256 megabytes

Problem Statement:
Mishka started participating in a programming contest. There are 'n' problems in the contest. Mishka's problem-solving skill is equal to 'k'.

Mishka arranges all problems from the contest into a list. Due to his unique principles, Mishka only solves problems from one of the ends of the list. Every time, he chooses which end (left or right) he will solve the next problem from. Thus, each problem Mishka solves is either the leftmost or the rightmost problem in the list.

Mishka cannot solve any problem with a difficulty greater than 'k'. When Mishka solves a problem, it disappears from the list, so the length of the list decreases by 1. Mishka stops when he is unable to solve any problem from either end of the list.

You are required to calculate how many problems Mishka can solve before he stops.

Input:
- The first line of input contains two integers 'n' and 'k' (1 ≤ n, k ≤ 100) — the number of problems in the contest and Mishka's problem-solving skill.
- The second line of input contains 'n' integers a1, a2, ..., an (1 ≤ ai ≤ 100), where 'ai' represents the difficulty of the i-th problem. The problems are given in order from the leftmost to the rightmost in the list.

Output:
Print one integer — the maximum number of problems Mishka can solve.

Example:
Input:
8 3
4 2 3 1 5 1 6 4

Output:
5

Explanation:
In the first example, Mishka can solve problems in the following order: 
[4, 2, 3, 1, 5, 1, 6, 4] → [2, 3, 1, 5, 1, 6, 4] → [2, 3, 1, 5, 1, 6] → [3, 1, 5, 1, 6] → [1, 5, 1, 6] → [5, 1, 6]
Thus, the number of solved problems will be equal to 5.

*/



#include<bits/stdc++.h>
using namespace std;

int main()
{
        int n,k;
        cin>>n>>k;
        int i,j,count=0;
        vector<int>v(n);
        for(i=0;i<n;i++)
        {
            cin>>v[i];
        }
        i=0,j=n-1;
        while(i<=j)
        {
            
            if(v[i]<=k)
            {
               i++;
               count++;
            }
            else if(v[j]<=k)
            {
                j--;
                count++;
            }
            else 
            {
               break;
            }
            
        }
        cout<<count<<endl;
    
        return 0;
}
