/*
* Problem: A. Choose Two Numbers
* Time Limit: 1 second
* Memory Limit: 256 megabytes
*
* Description:
* You are given an array A consisting of n positive integers a1, a2, ..., an, 
* and an array B consisting of m positive integers b1, b2, ..., bm.
* 
* Choose some element a from A and some element b from B such that a + b
* doesn't belong to A and doesn't belong to B.
*
* For example, if A = [2, 1, 7] and B = [1, 3, 4], we can choose 1 from A 
* and 4 from B, as the number 5 = 1 + 4 doesn't belong to A and doesn't 
* belong to B. However, we can't choose 2 from A and 1 from B, as 
* 3 = 2 + 1 belongs to B.
* 
* It can be shown that such a pair exists. If there are multiple answers, 
* print any.
*
* Input:
* - The first line contains one integer n (1 ≤ n ≤ 100) — the number of elements of A.
* - The second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 200) — the elements of A.
* - The third line contains one integer m (1 ≤ m ≤ 100) — the number of elements of B.
* - The fourth line contains m different integers b1, b2, ..., bm (1 ≤ bi ≤ 200) — the elements of B.
* 
* It can be shown that the answer always exists.
*
* Output:
* - Output two numbers a and b such that a belongs to A, b belongs to B, 
*   but a + b doesn't belong to either A or B.
* 
* If there are multiple answers, print any.
*/



#include<bits/stdc++.h>
using namespace std;
bool Occur(vector<int>&a,int k)
{
    for(int i=0;i<a.size();i++)
    {
        if(a[i]==k)
        {
            return true;
        }
    }
    return false;
}
int main()
{
     int n,m;
        cin>>n;
        int i,j,sum=0;
        
        vector<int>a(n);
        for(i=0;i<n;i++)
        {
            cin>>a[i];
            
        }
        cin>>m;
        vector<int>b(m);
        for(i=0;i<m;i++)
        {
            cin>>b[i];
            
        }
        bool flag=false;
        int a1=-1,a2=-1;
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                int k=a[i]+b[j];
                bool c1=Occur(a,k);
                bool c2=Occur(b,k);
                if(c1==false && c2==false)
                {
                    flag=true;
                    a1=a[i];
                    a2=b[j];
                    break;
                }
            }
            if(flag==true)
            {
                break;
            }
        }
        cout<<a1<<" "<<a2<<endl;
        return 0;
}
