# C. Product of Three Numbers

**Time limit per test**: 2 seconds  
**Memory limit per test**: 256 megabytes

## Problem Statement

You are given one integer number \( n \). Find three distinct integers \( a, b, c \) such that \( 2 \leq a, b, c \) and \( a \cdot b \cdot c = n \) or say that it is impossible to do it.

If there are several answers, you can print any.

You have to answer \( t \) independent test cases.

## Input

- The first line of the input contains one integer \( t \) (1 ≤ \( t \) ≤ 100) — the number of test cases.
- The next \( t \) lines describe test cases. The \( i \)-th test case is given on a new line as one integer \( n \) (2 ≤ \( n \) ≤ \( 10^9 \)).

## Output

For each test case, print the answer. Print "NO" if it is impossible to represent \( n \) as \( a \cdot b \cdot c \) for some distinct integers \( a, b, c \) such that \( 2 \leq a, b, c \).

Otherwise, print "YES" and any possible such representation.

## Example

**Input**
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin>>t;
    while (t--)
    {
        int n;
        cin>>n;
        int i,k,j,a,b,c;
        bool flag=false;
        for(i=2;i<cbrt(n);i++)
        {
            if(n%i==0)
            {

            int n1=n/i;
            for(j=i+1;j<sqrt(n1);j++)
            {
                if(n1%j==0)
                {
                      a = i;
                     b = j;
                      c = n1/j;
                     flag = true;
                            break;
                }
                if(flag==true)
                {
                    break;
                }
                
            }
            if(flag==true)
            {
                break;
            }
            }
        }
        if(flag==true)
        {
            cout<<"YES"<<endl;
            cout<<a<<" "<<b<<" "<<c<<endl;
        }
        else 
        {
            cout<<"NO"<<endl;
        }
    }
    return 0;
}
